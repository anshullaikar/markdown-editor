{"version":3,"sources":["editorContext.js","components/markedinput.jsx","components/result.jsx","App.js","reportWebVitals.js","index.js"],"names":["defaultContext","markdownText","setMarkdownText","React","createContext","Container","styled","div","Title","TextArea","textarea","MarkedInput","props","useContext","editorContext","onChange","e","newValue","currentTarget","value","ResultArea","Result","source","AppContainer","EditorContainer","App","useState","contextValue","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEMA,EAAiB,CACnBC,aAAc,GACdC,gBAAiB,cAGNC,MAAMC,cAAcJ,G,OCH7BK,EAAYC,IAAOC,IAAV,6KAQTC,EAAQF,IAAOC,IAAV,yKAQLE,EAAWH,IAAOI,SAAV,iJASP,SAASC,EAAYC,GAAQ,IACzBV,EAAmBW,qBAAWC,GAA9BZ,gBAOP,OACI,eAACG,EAAD,WACI,cAACG,EAAD,4BAGA,cAACC,EAAD,CAAUM,SAVI,SAAAC,GAClB,IAAMC,EAAWD,EAAEE,cAAcC,MACjCjB,EAAgBe,S,iCC7BlBZ,EAAYC,IAAOC,IAAV,6KAQTC,EAAQF,IAAOC,IAAV,yKAQLa,EAAad,IAAOC,IAAV,0GAOD,SAASc,EAAOT,GAAO,IAC3BX,EAAgBY,qBAAWC,GAA3Bb,aAEP,OACA,eAAC,EAAD,WACI,cAAC,EAAD,6BACA,cAACmB,EAAD,UACI,cAAC,IAAD,CAAeE,OAAUrB,SC7BrC,IAAMsB,EAAejB,IAAOC,IAAV,iIAQZC,EAAQF,IAAOC,IAAV,gIAOLiB,EAAkBlB,IAAOC,IAAV,+EA4BNkB,MArBf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBAGPC,EAAe,CACnB1B,aAJW,KAKXC,gBALW,MAQb,OACE,cAAC,EAAc0B,SAAf,CAAwBT,MAASQ,EAAjC,SACE,eAACJ,EAAD,WACE,cAAC,EAAD,8BACA,eAACC,EAAD,WACE,cAACb,EAAD,IACA,cAACU,EAAD,aC9BKQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1baf07a4.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst defaultContext = {\r\n    markdownText: \"\",\r\n    setMarkdownText: () => {},    \r\n}\r\n\r\nexport default React.createContext(defaultContext)","import React, {useContext} from \"react\";\r\nimport styled from \"styled-components\"\r\nimport editorContext from \"../editorContext\";\r\n\r\nconst Container = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    padding: 13px;\r\n    border-right: 1.5px solid rgba(15,15,15,0.4);\r\n    font-family: \"Lato\", sans-serif;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    margin-bottom: 1em;\r\n    padding: 8px 0;\r\n    border-bottom: 1px solid rgba(15,15,15,0.3);\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n    width: 100%;\r\n    height: 100%;\r\n    resize: none;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 17px;\r\n`\r\n\r\nexport function MarkedInput(props) {\r\n    const {setMarkdownText} = useContext(editorContext)\r\n    \r\n    const onInputChange = e => {\r\n        const newValue = e.currentTarget.value;\r\n        setMarkdownText(newValue)\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Title>\r\n                Markdown Text\r\n            </Title>\r\n            <TextArea onChange = {onInputChange}/>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport ReactMarkdown from \"react-markdown\"\r\nimport editorContext from \"../editorContext\";\r\n\r\nconst Container = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    padding: 13px;\r\n    border-right: 1.5px solid rgba(15,15,15,0.4);\r\n    font-family: \"Lato\", sans-serif;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    margin-bottom: 1em;\r\n    padding: 8px 0;\r\n    border-bottom: 1px solid rgba(15,15,15,0.3);\r\n`;\r\n\r\nconst ResultArea = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    font-size: 17px;\r\n`\r\n\r\nexport default function Result(props){\r\n    const {markdownText} = useContext(editorContext);\r\n\r\n    return(\r\n    <Container>\r\n        <Title>Converted Text</Title>\r\n        <ResultArea>\r\n            <ReactMarkdown source = {markdownText}/>\r\n        </ResultArea>\r\n    </Container>)\r\n}\r\n","import { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { MarkedInput } from \"./components/markedinput\"\nimport Result from \"./components/result\"\nimport EditorContext from \"./editorContext\"\n\nconst AppContainer = styled.div`\n  width:100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Title = styled.div`\n  font-size: 25px;\n  font-weight: 700;\n  font-family: \"Lato\", sans-serif;\n  margin-bottom: 1em;\n`\n\nconst EditorContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n`\n\n\nfunction App() {\n  const [markdownText, setMarkdownText] = useState(\"\");\n\n  const contextValue = {\n    markdownText, \n    setMarkdownText\n  }\n\n  return (\n    <EditorContext.Provider value = {contextValue}>\n      <AppContainer>\n        <Title>Markdown Editor</Title>\n        <EditorContainer>\n          <MarkedInput/>\n          <Result/>\n        </EditorContainer>\n      </AppContainer>\n    </EditorContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}